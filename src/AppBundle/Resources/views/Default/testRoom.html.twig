

{{ form_start(form) }}

{% block body  %}
 {{ form_widget(form.name, { 'attr': {'class': 'txt','placeholder': "Nombre "}  }) }}
{{ form_widget(form.surname, { 'attr': {'class': 'txt','placeholder': "Apellidos"}  }) }}

 {{ form_widget(form.address, { 'id': "autocomplete",'attr': {'class': 'txt','placeholder': "Direcci√≥n ", "onfocus" : "geolocate()"}  }) }}
{{ form_widget(form.phone, { 'attr': {'class': 'txt','placeholder': "Telefono"}  }) }}

 {{ form_widget(form.number, { 'attr': {'class': 'txt','placeholder': "Numero "}  }) }}
{{ form_widget(form.dni, { 'attr': {'class': 'txt','placeholder': "DNI"}  }) }}

 {{ form_widget(form.users, { 'attr': {'class': 'txt','placeholder': "usuarios "}  }) }}
{{ form_widget(form.direction, { 'attr': {'class': 'txt','placeholder': "Direction"}  }) }}

 {{ form_widget(form.class, { 'attr': {'class': 'txt','placeholder': "class "}  }) }}
{{ form_widget(form.continuar, { 'attr': {'class': 'txt','placeholder': "continuar"}  }) }}
{{ form_widget(form.vaciar, { 'attr': {'class': 'txt','placeholder': "vaciar campos"}  }) }}



{{ form_end(form) }}


{{ form_start(formDir) }}



    {{ form_widget(formDir.cp, {'id': "postal_code", 'attr': {'class': 'txt','placeholder': "codigo postal "} }) }}
    {{ form_widget(formDir.city, { 'id': "locality", 'attr': {'class': 'txt','placeholder': "ciudad"}  }) }}
    {{ form_widget(formDir.province, { 'id': "administrative_area_level_1",'attr': {'class': 'txt','placeholder': "provincia"}  }) }}


    {{ form_end(formDir) }}

{% endblock  %}

{% block javascripts %}

    <script src="http://code.jquery.com/jquery-3.1.1.min.js"></script>

    <script>
        

        var placeSearch, autocomplete;
        var componentForm = {
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            postal_code: 'short_name'
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                    /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
                    {types: ['geocode']});

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        // [START region_fillform]
        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }
        // [END region_fillform]

        // [START region_geolocation]
        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }
        // [END region_geolocation]

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCWynNJSeVOgUCHq-WlLGSdvhMRVzqb4dY&libraries=places&callback=initAutocomplete"
            async defer></script>



{% endblock %}
